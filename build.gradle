import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.6'
    id 'io.spring.dependency-management' version '1.1.4'

    id 'org.jetbrains.kotlin.jvm' version '2.1.21'
    id 'org.jetbrains.kotlin.plugin.spring' version '2.1.21'
    id 'org.jetbrains.kotlin.plugin.jpa' version '2.1.21'
    id 'org.jetbrains.kotlin.kapt' version '2.1.21' // kotlin annotation processing
}

group = 'com.footballay'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
kapt {
    useBuildCache = true
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    kapt "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.7.0"
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation 'io.mockk:mockk:1.14.2'

    // Monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-core' // Micrometer 모니터링
    implementation 'io.micrometer:micrometer-registry-prometheus' // Prometheus 모니터링
    implementation 'com.github.loki4j:loki-logback-appender:1.4.2' // Loki 로그 수집

    // AWS
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'software.amazon.awssdk:s3:2.29.36'
    implementation 'software.amazon.awssdk:cloudfront:2.29.36'

    // AWS SDK가 JAXB를 사용
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    // CloudFront Signed URL/Cookie를 위한 암호화 (RSA 서명)
    // BouncyCastle는 RSA 서명 용도로 사용
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'

    // OKHttp : for http client
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

    // Jackson : for json serialize
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.module:jackson-module-blackbird'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // to set more detail Jsession cookie policies
    implementation 'org.springframework.session:spring-session-core'
    implementation 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'org.postgresql:postgresql'
    testRuntimeOnly 'com.h2database:h2:2.2.224'

    // JJWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Quartz
    implementation 'org.springframework.boot:spring-boot-starter-quartz'

    // Apache POI : for excel
    implementation 'org.apache.poi:poi:5.2.4'
    implementation 'org.apache.poi:poi-ooxml:5.2.4'

    // Apache Tika : for file type detection and validation
    implementation 'org.apache.tika:tika-core:2.9.2'
    implementation 'org.apache.tika:tika-parsers-standard-package:2.9.2'

    // 테스트 관련
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // 테스트용 레디스 컨테이너
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.testcontainers:testcontainers:1.19.5'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.5'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'com.redis.testcontainers:testcontainers-redis:1.6.4'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
}

tasks.named('test') {
    useJUnitPlatform()
}
tasks.withType(KotlinCompile).configureEach {
    compilerOptions {
        jvmTarget.set(JvmTarget.JVM_17)

        freeCompilerArgs.set([
                "-Xjsr305=strict",  // Spring과 상호 운용성 강화
        ])
    }
}

kotlin {
    jvmToolchain(17)
}

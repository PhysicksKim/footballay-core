package com.footballay.core.infra.persistence.core.entity

import jakarta.persistence.*

/**
 * uid 에 인덱스 필요 - 외부 노출 ID로 사용되기 때문
 */
@Entity
@Table(name = "refac_leagues")
data class LeagueCore(

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    var id: Long? = null,

    /**
     * 외부 노출 ID
     */
    @Column(name = "uid", unique = true, nullable = false)
    var uid: String,

    @Column(nullable = false)
    var name: String,

    @Column(nullable = false)
    var available: Boolean = false,

    /**
     * Provider data Sync 과정에서 자동으로 생성된 core 인 경우입니다. <br>
     * 관리자에 의해 체크가 필요한 경우를 나타냅니다. <br>
     */
    @Column(nullable = false)
    var autoGenerated: Boolean = true,

    @OneToMany(
         mappedBy = "league",
         cascade = [CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REMOVE],
         orphanRemoval = true
    )
    var leagueTeams: MutableSet<LeagueTeamCore> = mutableSetOf()
) {
    fun addTeam(team: TeamCore) {
        val existingRelation = leagueTeams.any { it.team?.id == team.id }
        if (!existingRelation) {
            val leagueTeam = LeagueTeamCore(
                league = this,
                team = team
            )
            leagueTeams.add(leagueTeam)
        }
    }

    fun removeTeam(team: TeamCore) {
        val rel = leagueTeams.find { it.team.id == team.id } ?: return
        this.leagueTeams.remove(rel)
        team.leagueTeams.remove(rel)
    }

    override fun toString(): String {
        return "LeagueCore(id=$id, uid='$uid', name='$name', available=$available, autoGenerated=$autoGenerated)"
    }

}

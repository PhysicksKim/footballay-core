package com.footballay.core.infra.persistence.core.entity

import jakarta.persistence.*
import java.time.OffsetDateTime

/**
 * 공통 Fixture 엔티티입니다. <br>
 * 절대로 API 별 상세 데이터를 담으면 안됩니다. <br>
 *
 */
@Entity
@Table(name = "refac_fixtures")
data class FixtureCore(

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    var id: Long? = null,

    /**
     * 외부 노출 ID
     */
    @Column(name = "uid", unique = true, nullable = false, updatable = false)
    var uid: String,

    /**
     * 경기 시작 시간. UTC 로 저장합니다.
     */
    var kickoff: OffsetDateTime,

    /**
     * 경기 시작 시간. UNIX 타임스탬프 형식으로 저장합니다.
     */
    var timestamp: Long, // UNIX timestamp

    /**
     * 경기 상태 (예: Not Started, Full Time, First Half, Half Time, Second Half 등)
     */
    var status: String,

    /**
     * 경기 상태 약어 (예: NS, FT, 1H, HT, 2H 등)
     */
    var statusShort: String,

    /**
     * 경기 시간 (분 단위)
     * 예: 90, 45, 30 등
     */
    var elapsedMin: Int? = null,

    @ManyToOne(fetch = FetchType.LAZY)
    var league: LeagueCore,

    @ManyToOne(fetch = FetchType.LAZY, optional = true)
    var homeTeam: TeamCore?,

    @ManyToOne(fetch = FetchType.LAZY, optional = true)
    var awayTeam: TeamCore?,

    var goalsHome: Int? = null,
    var goalsAway: Int? = null,

    @Column(nullable = false)
    var finished: Boolean = false,

    @Column(nullable = false)
    var available: Boolean = false,

    /**
     * Provider data Sync 과정에서 자동으로 생성된 core 인 경우입니다. <br>
     * 관리자에 의해 체크가 필요한 경우를 나타냅니다. <br>
     */
    @Column(nullable = false)
    var autoGenerated: Boolean = true

)
package com.footballay.core.infra.core

import com.footballay.core.infra.core.dto.LeagueCoreCreateDto
import com.footballay.core.infra.persistence.core.entity.LeagueCore
import com.footballay.core.infra.persistence.core.repository.LeagueCoreRepository
import com.footballay.core.infra.util.UidGenerator
import jakarta.transaction.Transactional
import org.springframework.stereotype.Service

@Service
class LeagueCoreSyncServiceImpl(
    private val leagueCoreRepository: LeagueCoreRepository,
    private val uidGenerator: UidGenerator
) : LeagueCoreSyncService {

    @Transactional
    override fun saveLeagueCore(dto: LeagueCoreCreateDto): LeagueCore {
        // UID 생성 및 유효성 검사
        val uid = uidGenerator.generateUid()
        if (!uidGenerator.isValidUid(uid)) {
            throw IllegalArgumentException("Invalid UID format: $uid")
        }

        // LeagueCore 엔티티 생성
        val leagueCore = LeagueCore(
            uid = uid,
            name = dto.name,
            autoGenerated = dto.autoGenerated,
            available = dto.available
        )

        // 저장 및 반환 (영속 상태)
        return leagueCoreRepository.save(leagueCore)
    }
} 